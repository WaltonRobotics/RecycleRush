// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2974.Ralph;

import org.usfirst.frc2974.Ralph.autonomous.*;
import org.usfirst.frc2974.Ralph.commands.*;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
	
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	public Joystick left;
	public Joystick right;
    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    	left = new Joystick(0);
    	right = new Joystick(1);
	    
        // SmartDashboard Buttons
//        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        //test auton commands
        SmartDashboard.putNumber("Forward = 1, Backward = -1", 5 );
        SmartDashboard.putNumber("Time To Travel", 5 );
      //  SmartDashboard.putData("Forward For Time", new ForwardForTime(SmartDashboard.getNumber("Time to Travel", 500000.0),SmartDashboard.getNumber("Forward = 1, Backward = -1", 1.0)));
        SmartDashboard.putBoolean("Forward For Time",false);
     // SmartDashboard.putData("Forward For Time", new ForwardForTime(500000.0, 100.0));
        

        SmartDashboard.putNumber("Strafe Right = 1, Strafe Left = -1", 5 );
        SmartDashboard.putNumber("Time To Strafe", 5 );
       //SmartDashboard.putData("Strafe For Time", new StrafeForTime(SmartDashboard.getNumber("Time to Strafe", 5.0),SmartDashboard.getNumber("Strafe Right = 1, Strafe Left = -1", 5.0)));
        SmartDashboard.putBoolean("Strafe For Time",false);

        SmartDashboard.putNumber("Turn Right = 1, Turn Left = -1", 5 );
        SmartDashboard.putNumber("Time To Turn", 5 );
//        SmartDashboard.putData("Turn For Time", new TurnForTime(SmartDashboard.getNumber("Time to Turn", 5.0),SmartDashboard.getNumber("Turn Right = 1, Turn Left = -1", 5.0)));
        SmartDashboard.putBoolean("Turn For Time",false);

        //end test auton commands
        
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
    }
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

